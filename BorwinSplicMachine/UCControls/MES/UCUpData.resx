<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRun.StateNormal.Back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAABGdBTUEAALGPC/xhBQAACWhJREFUeF7t
        nettG0cUhV1C4jSQUlxKOnEVsX+qlJQRgBKgUpK9O7MmRc2S+zh3nt8HHMCALHJ2Zs59zC6pLwAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANA5v/3898+g129ff75+
        v+rtZV2v3//4+/KXyX7Pfj++HECb3Jvg9x+v/3z98fqfTpf3WZOBFuPEtwaoj1tD6M2wR8E0GAaKY6Yo
        b4hHurzPY5vGGIcM4Ev9plhTMIuVY/FSAHQsxkhvvtZkZdjrd7umeHkAxwjGeHtJb7QORL8CRzBjtFdG
        ndHlHaPAU8Yzxp3IKJCirx5DoNko9CgwYSc7yU0yvEIzH6cJRmP4cmqzrD8hmwwFWWOvyCbDQNY4IUzS
        L3MjbpEwtfBohyi5umN+kDC52OiYKLm6geNbR2GStqnvMZEQeU12ULB8liPoWrbYv4Nevy3/bz5YmK6n
        uh4Kk7RJ+Y10fdxcfXf61jxVBIFpDHFo0ALlzBEyRIkm1t5zzk42huTYvHV5j0OBmiljjsu7RfM4hKKY
        UYplFjJJ3eQ1R/0nOUWyCiapk3zmqN8Y92Q3Ciapi7D4iYVSqzFj3HM1SuLa1Gp8rrrBTnOSCySUZSfb
        XPEtm8euJUfGraUvGxZ/c9TTfHswN/OuZRefVCyK5+JahI1v0zX+ZRfPbhXBtUQYrH52NwlNe15CaZBY
        CIFGLgl8TULTnoU52qUW4LSol40wvx6lK6VWFjxKq1H6ja14miS+BXjgUVphjjRmEo9gxNGvI6kJPyci
        2iN8Mgmllgv6h+/oObbgYhJOtbR43BDEHNsJJknP41Ex/0LUtTCLsx91/0fvJ0KdPTDHcdQmYS0EKLMH
        Ues8rEdF6LMHpydnUfcjZJETKKMVC6FDWWqRRQ6ijFQsgh6CV2GU9z0orfRISy3ui+wnOZFHxFOkbuhK
        LZ5o2AUT3waWRVSllq15fFlIMafsKdora1sm3R91w86a3bEYIzVhZxXfAhyR9iK/dCn2DZXVEIzh+O1/
        9B7Z8ApwwSiD/UFRz4xxq6GjT2bmNU2sgU4ho8S365ccxpjFsWF2XKuBX+rUKBZhlM33M5E98uOfRa6y
        vdTNGqufp3oqskcxcgZByybNn3hlK6luxDFhOZRHvtvUcMmVN5pcFd8eCpCzzPqg1kxSyhyUV+Vh7Z9Q
        bIIm8VRoebL3nLeq3SQlzWGKw4CCFCuzFtVqEhtYcsC5RHlVDSUOZz6otp4k/+nFrQa5y9oQcxaZA+a0
        Nsk1y6Ba9kSZmjOYoueew66th5thwSzap7S3qZIvBswXJRZT9H2X3K7vupn6+prO/GYp/HmgLBc6gClu
        +TSn0/XHH3VFMEuGvrVUb+peWnW6MR5h1zzaXCxZJXndIhUptbxKK4ugI2WMhWcBp/c58TVK5lLL7UI6
        jpSPmDdHaj4+aIw/GxBORPXBN+szeqkBnNPYf4pgcy83SAAJAUNtkkxZRN9YjREZ19idjTHJYWXJIqk3
        Pq6xv5bn6EHHKAHFrlN7Uuq839R3zEfOHCFCpuflucbJumGedJnEtZRvZqANcDoyDnSgcS6YfJTNe3xZ
        LUfLgaQGPa1a2N13rGmgeZTN2SSX4Kxqzt0c3AjSQDNppDJV1o94BBZVeTVyaaUsFa4arR9JzcE+yYO0
        KuqNnj1kEfBeA5VaqjmUBhXV6dXI2UNZQyc1iElUWUS6FxX9x8jZQ913rGmUUkuSRZQBRdF/ZH0WpiJU
        EW+bRnpeK3X9eyS8aZh+g30aJbrd49Z3rGmAUksTdEQGUZUH8eWGwr3vWNMAJlEEHknQlqSzUp/qKkiu
        vmNNvWdsRfCRNOqKgYzWf2hKgLPqux9RBCDJvlScYI1mkOx9x5o6LrUkGVoxPwqDSFJZIygyrlSdmkSS
        pesxyBgnWKX7jjX1OP8agwh6Y0W5EF+qayQL5qY++5H0te6QwiBkkG1U03esqcNSK3mde1SPQfruQarr
        O9bUkUk0JRZNuju19h1r6iWbV2QQ7oOsIVmk7OqjH1HcwJbsS8VAJLVehTRTWt2rg1KrmsCtKSH6/Hqf
        6hvzFdm44yU0SzWHR6oyIr5cV4TgYR8FOKr0XG1X6jWfaNpYPfSE6fnYp/hS51FEyp4b9SOEDZueq20a
        90v3qiv7FQbpIa0rwSDHUZRXUoOojjLJIlcwyHHS87FPkgZ9QXacqXRt42CQY6hODuVH3ecX1DTOdzg9
        A4McQ7EPXcp9RR8yiywyg0H2I+k9TB57UNWHmKT1X6NgkH0o959bLyzLItPijl5qYZB9nJ+vINfTVMn5
        86LBSy0Msh1dYHauXmSnWYsGNgkG2Yas74iKL+uHesCjmgSDPEe917L0vvIsYhrQJBjkMfJAPCm+tD/K
        mvCqsRp3DJLG9oDL/soZhF2yyKxp03TwWYUtYJDPSA+BPqjAXPldjMmySd/PbWGQK25ZI6rYXvK8qKDL
        e5bGqgAYxN8Ys0r2t36l1r2s9Hp76cksIxrE9st8R3x+4PDs9W9RBXPkW2qlZBMbDLOYxmQT31JZdn6D
        1GmQxQTzvjAjzHp78a82Pqua/VDi4tdl5qm/0e/JIHMlMWeF1DgLqWRpdU+WWnK36m70ezGIzXF6fOVk
        ezEOrx4wyT56MAjm2Mmcak8vvFp11uo9GCQ9rnKq2hwLVZqkpno00rpBaus5mjDHQn0mqS+LNG+Qita3
        KXMs1NaT1NaLtGyQmnqPJs2xMGeSSlIxBtGR/97Xiho4zt9EDSWXLWocThWQQc6owye/S2eT2ia0bYNY
        wEuNKYN6yRprhOiTP5vEt6+Glg1i5F/D/p/w/oVFoFDHZprkCqNO6wbJ14f0+0T3JuzifU+7ym6kNVo3
        SCizPAPcQBljC6FH0X8OudZJbt0ghksvMmV7e934FnDPr/Lr9CPSPKyYg/OZZPrd2RRki0N8NsyzxQgT
        Hn+9Ws5tKlM9peNskmnO0+NcZNd7eZ/X0P5vA2vUNLYoQeGDUovij6unJ4Pc8nlNKJfgAL0aBEACBgF4
        AAYBeAAGAXgABgF4AAYBeAAGAXgABgF4AAYBeAAGAXgABgF4wNlH+5v+Ng+AZzx/+vWJeBoWeudoFiF7
        wDBcP3JsPckTTYYa+vPZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCZL1/+
        Bx7ueEFZBSL1AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnSave.StateNormal.Back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>