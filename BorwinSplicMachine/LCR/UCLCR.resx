<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnStart.StateCommon.Back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnStart.StateNormal.Border.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>