<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnStart.StateCommon.Back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
  <data name="btnStart.StateNormal.Border.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>